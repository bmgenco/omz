guides(fill=guide_colourbar(title=bquote(title_two), barheight = 8)) +
theme(legend.title =element_text(size=8), legend.text=element_text(size=6)) +
theme(text=element_text(family="Helvetica")) + theme(legend.position = "none") +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank()) +
geom_sf(data = circle, color = "red", alpha = 0, inherit.aes = FALSE)
return(f3)
}
f.fig2_legend<-function(combined, v_rgb, height, width, t,b,r,l, title.textsize, marks.textsize){
t1<-combined[[1]]
t2<-v_rgb[[1]]
lat<-as.numeric(row.names(t(t1)))
lon<-as.numeric(colnames(t(t1)))
t1<-raster(t(t1))
extent(t1)<-extent(min(lon), max(lon), min(lat), max(lat))
t1_ex<-extent(t1)
t2_ex<-extent(t2)
extent(t1)<-extent(t1_ex[1], t2_ex[2], t2_ex[3], t2_ex[4])
extent(t2)<-extent(t1_ex[1], t2_ex[2], t2_ex[3], t2_ex[4])
rm(t1_ex, t2_ex)
t3<-resample(t1, t2)
t3<-na.omit(t3)
rm(t1)
p<-ggplot()+ggR(t3, geom_raster = TRUE, ggLayer=T) +
theme(axis.line = element_line(colour = "black"),
plot.margin = unit(c(0, 0, 0, 0, 0), "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", fill=NA, size=5),
axis.title.x=element_blank(),
axis.title.y=element_blank()) +
scale_fill_gradientn(colors = custom_color, values=cuts, na.value=NA,limits=c(0,5),
name=waiver(),breaks=labs)+
guides(fill=guide_colourbar(title=title_two, barheight = height, barwidth = width)) +
theme(legend.title =element_text(size=title.textsize), legend.text=element_text(size=marks.textsize)) +
theme(text=element_text(family="Helvetica"))
legend <- get_legend(p + theme(legend.box.margin = margin(t, r, b, l)))
rm(p, t3, t2)
return(legend)
} # l = legend margin left, b=barhieght (in cm ) of legend
#indovidually assin plots
i<-1
plots[[i]]<-f.fig2(combined, v_rgb, i=i, t=0, l=0)
# directory<-paste(ocean_color, "/true_color/viirs", sep ="") #change to modis if nessecary
setwd(ocean_color)
setwd("./true_color/viirs")
files<-list.files()
v_rgb<-lapply(files,stack)
#v_rgb<-lapply(v_rgb, ggRGB, r=1, g=2, b=3)
rm(files)
start<-Sys.time()
options(warn=-1)
plots<-vector(mode='list', length = length(combined))
cuts<-c(0, 0.01, 0.02, 0.04,  0.08,  0.1,  0.15, 0.2, 0.35, 0.5, 0.8, 0.9, 1, 2,3,4, 5)
n<-length(cuts)+1
custom_color<-rev(rainbow(n))
cuts<-rescale(cuts)
title_two<-expression(atop(textstyle("Chl a"), textstyle("mg m"^-3*"")))
labs<-c(0.1, .5, 1, 2 , 2.5, 5)
# bar_height<-25
bar_height<-22.70
f.fig2<-function(combined, v_rgb, i, t, l){
t1<-combined[[i]]
t2<-v_rgb[[i]]
date<-paste0("June", " ", names(combined)[i])
lat<-as.numeric(row.names(t(t1)))
lon<-as.numeric(colnames(t(t1)))
t1<-raster(t(t1))
extent(t1)<-extent(min(lon), max(lon), min(lat), max(lat))
t1_ex<-extent(t1)
t2_ex<-extent(t2)
extent(t1)<-extent(t1_ex[1], t2_ex[2], t2_ex[3], t2_ex[4])
extent(t2)<-extent(t1_ex[1], t2_ex[2], t2_ex[3], t2_ex[4])
rm(t1_ex, t2_ex)
t3<-resample(t1, t2)
t3<-na.omit(t3)
rm(t1)
f1<- ggRGB(t2, r=1, g=2, b=3, ggObj = T) + ggtitle(date)+theme_bw() +
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.line = element_line(colour = "black"),
plot.margin = unit(c(t, 0, 0, l), "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
#panel.background = element_rect(colour = "black", fill=NA, size=5),
axis.title.x=element_blank(),
axis.title.y=element_blank()) +
scale_y_continuous(expand = c(0, 0))+
scale_x_continuous(expand = c(0, 0), breaks=seq(-120, -100, b=10))
f3<-f1+ggR(t3, geom_raster = TRUE, ggLayer=T) +
theme(axis.line = element_line(colour = "black"),
plot.margin = unit(c(t, 0, 0, 0, l), "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", fill=NA, size=5),
axis.title.x=element_blank(),
axis.title.y=element_blank()) +
scale_fill_gradientn(colors = custom_color, values=cuts, na.value=NA,limits=c(0,5),
name=waiver(),breaks=labs)+
guides(fill=guide_colourbar(title=bquote(title_two), barheight = 8)) +
theme(legend.title =element_text(size=8), legend.text=element_text(size=6)) +
theme(text=element_text(family="Helvetica")) + theme(legend.position = "none") +
geom_sf(data = circle, color = "red", alpha = 0, inherit.aes = FALSE)
return(f3)
}
f.fig2_no_y<-function(combined, v_rgb, i, t, l){
t1<-combined[[i]]
t2<-v_rgb[[i]]
date<-paste0("June", " ", names(combined)[i])
lat<-as.numeric(row.names(t(t1)))
lon<-as.numeric(colnames(t(t1)))
t1<-raster(t(t1))
extent(t1)<-extent(min(lon), max(lon), min(lat), max(lat))
t1_ex<-extent(t1)
t2_ex<-extent(t2)
extent(t1)<-extent(t1_ex[1], t2_ex[2], t2_ex[3], t2_ex[4])
extent(t2)<-extent(t1_ex[1], t2_ex[2], t2_ex[3], t2_ex[4])
rm(t1_ex, t2_ex)
t3<-resample(t1, t2)
t3<-na.omit(t3)
rm(t1)
f1<- ggRGB(t2, r=1, g=2, b=3, ggObj = T) + ggtitle(date)+theme_bw() +
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.line = element_line(colour = "black"),
plot.margin = unit(c(t, 0, 0, l), "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
#panel.background = element_rect(colour = "black", fill=NA, size=5),
axis.title.x=element_blank(),
axis.title.y=element_blank()) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0), breaks=seq(-120, -100, b=10))
f3<-f1+ggR(t3, geom_raster = TRUE, ggLayer=T) +
theme(axis.line = element_line(colour = "black"),
plot.margin = unit(c(t, 0, 0, l), "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", fill=NA, size=5),
axis.title.x=element_blank(),
axis.title.y=element_blank()) +
scale_fill_gradientn(colors = custom_color, values=cuts, na.value=NA,limits=c(0,5),
name=waiver(),breaks=labs)+
guides(fill=guide_colourbar(title=bquote(title_two), barheight = 8)) +
theme(legend.title =element_text(size=8), legend.text=element_text(size=6)) +
theme(text=element_text(family="Helvetica")) + theme(legend.position = "none") +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank()) +
geom_sf(data = circle, color = "red", alpha = 0, inherit.aes = FALSE)
return(f3)
}
f.fig2_legend<-function(combined, v_rgb, height, width, t,b,r,l, title.textsize, marks.textsize){
t1<-combined[[1]]
t2<-v_rgb[[1]]
lat<-as.numeric(row.names(t(t1)))
lon<-as.numeric(colnames(t(t1)))
t1<-raster(t(t1))
extent(t1)<-extent(min(lon), max(lon), min(lat), max(lat))
t1_ex<-extent(t1)
t2_ex<-extent(t2)
extent(t1)<-extent(t1_ex[1], t2_ex[2], t2_ex[3], t2_ex[4])
extent(t2)<-extent(t1_ex[1], t2_ex[2], t2_ex[3], t2_ex[4])
rm(t1_ex, t2_ex)
t3<-resample(t1, t2)
t3<-na.omit(t3)
rm(t1)
p<-ggplot()+ggR(t3, geom_raster = TRUE, ggLayer=T) +
theme(axis.line = element_line(colour = "black"),
plot.margin = unit(c(0, 0, 0, 0, 0), "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", fill=NA, size=5),
axis.title.x=element_blank(),
axis.title.y=element_blank()) +
scale_fill_gradientn(colors = custom_color, values=cuts, na.value=NA,limits=c(0,5),
name=waiver(),breaks=labs)+
guides(fill=guide_colourbar(title=title_two, barheight = height, barwidth = width)) +
theme(legend.title =element_text(size=title.textsize), legend.text=element_text(size=marks.textsize)) +
theme(text=element_text(family="Helvetica"))
legend <- get_legend(p + theme(legend.box.margin = margin(t, r, b, l)))
rm(p, t3, t2)
return(legend)
} # l = legend margin left, b=barhieght (in cm ) of legend
#indovidually assin plots
i<-1
plots[[i]]<-f.fig2(combined, v_rgb, i=i, t=0, l=0)
i<-4
plots[[i]]<-f.fig2(combined, v_rgb, i=i, t=0, l=0)
i<-7
plots[[i]]<-f.fig2(combined, v_rgb, i=i, t=0, l=0)
i<-10
plots[[i]]<-f.fig2(combined, v_rgb, i=i, t=0, l=0)
i<-2
plots[[i]]<-f.fig2_no_y(combined, v_rgb, i=i, t=0, l=0)
i<-3
plots[[i]]<-f.fig2_no_y(combined, v_rgb, i=i, t=0, l=0)
i<-5
plots[[i]]<-f.fig2_no_y(combined, v_rgb, i=i, t=0, l=0)
i<-6
plots[[i]]<-f.fig2_no_y(combined, v_rgb, i=i, t=0, l=0)
i<-8
plots[[i]]<-f.fig2_no_y(combined, v_rgb, i=i, t=0, l=0)
i<-9
plots[[i]]<-f.fig2_no_y(combined, v_rgb, i=i, t=0, l=0)
i<-11
plots[[i]]<-f.fig2_no_y(combined, v_rgb, i=i, t=0, l=0)
i<-12
plots[[i]]<-f.fig2_no_y(combined, v_rgb, i=i, t=0, l=0)
p<-(plots[[1]]+ plots[[2]]+plots[[3]]+plots[[4]]+plots[[5]]+ plots[[6]]+ plots[[7]]+ plots[[8]]+plots[[9]]+plots[[10]]+ plots[[11]]+plots[[12]]+plot_layout(ncol=3))
### various legend options unused: ####
# b=.5
# height=45
# title.textsize=14, marks.textsize=12)
# r=30
# width=1.75
#  rel_widths=c(28,1)
# legend.t<-f.fig2_legend(combined, v_rgb, height=bar_height, width=1, t=-390, b=0, r=0, l=-115,  title.textsize=10, marks.textsize=8)
#
# setwd(fig)
# pdf("figure_two_legend_right_Top_axis_V6.pdf", height=11 , width =8.5)
# plot_grid(p, legend.t, ncol=2, rel_widths=c(42,1),  axis="b")
# dev.off()
#
#
# legend.b<-f.fig2_legend(combined, v_rgb, height=25, width=1, t=0, b=-362, r=0, l=-100,  title.textsize=10, marks.textsize=8)
#
# setwd(fig)
# pdf("figure_two_legend_right_Bottom_axis.pdf", height=11 , width =8.5)
# plot_grid(p, legend.b, ncol=2, rel_widths=c(42,1),  axis="b")
# dev.off()
#
#
# legend.c<-f.fig2_legend(combined, v_rgb, height=25, width=1, t=0, b=.5, r=0, l=-100,  title.textsize=10, marks.textsize=8)
#
#
# setwd(fig)
# pdf("figure_two_legend_right_Centered_axis.pdf", height=11 , width =8.5)
# plot_grid(p, legend.c, ncol=2, rel_widths=c(42,1),  axis="b")
# dev.off()
#
### finsiheed ####
end<-Sys.time()
elapsed<-end-start
print(elapsed)
setwd(fig)
# pdf("figure_two.pdf", height=11 , width =8.5)
pdf("figure_two_test.pdf", height=11 , width =8.5)
plot_grid(p, legend, ncol=2, rel_widths=c(14,1), align="h")
#
#
# legend.b<-f.fig2_legend(combined, v_rgb, height=25, width=1, t=0, b=-362, r=0, l=-100,  title.textsize=10, marks.textsize=8)
#
# setwd(fig)
# pdf("figure_two_legend_right_Bottom_axis.pdf", height=11 , width =8.5)
# plot_grid(p, legend.b, ncol=2, rel_widths=c(42,1),  axis="b")
# dev.off()
#
#
legend.c<-f.fig2_legend(combined, v_rgb, height=25, width=1, t=0, b=.5, r=0, l=-100,  title.textsize=10, marks.textsize=8)
setwd(fig)
# pdf("figure_two.pdf", height=11 , width =8.5)
pdf("figure_two_test.pdf", height=11 , width =8.5)
plot_grid(p, legend, ncol=2, rel_widths=c(14,1), align="h")
legend<-f.fig2_legend(combined, v_rgb, height=bar_height, width=1, t=-390, b=0, r=0, l=-115,  title.textsize=10, marks.textsize=8)
setwd(fig)
# pdf("figure_two.pdf", height=11 , width =8.5)
pdf("figure_two_test.pdf", height=11 , width =8.5)
plot_grid(p, legend, ncol=2, rel_widths=c(14,1), align="h")
dev.off()
fig
setwd(fig)
options(device ="X11")# for viewing graphs on large window
###plot options ##
# best thing is tho calculate hour average from raw data
x<-cruise_data # to make typing easier
# x$wind<-x$wind*0.514444 # knots ->m/s
# x = x[seq(1, nrow(x), 15), ] # subset every 15 minutes for cleaner image
# x = x[seq(1, nrow(x), 30), ] #
#x = x[seq(1, nrow(x), 60), ] # subset every 60 minutes
mydates <- interval(start = min(x$time), end = "2018-06-25") # subset x-axis
x<- x[which(time %within% mydates),]
rm(mydates)
scale.wind<-max(x$celsius) / max(x$wind)
scale.chla<-max(x$celsius) / max(x$chlorophyll)
rect_color<-"grey89"
tcolor<-"red"
fcolor<-"darkgreen"
#wcolor<-"cyan"
#### f1 rectangles #####
# adjust geom etx for various plots
# change the geom text value to change position of lables
# high for wind:
# geom_text(data=rects, x=centered, label=rects[,2], y =32.5, angle =90) +
# centered for clophyll
# geom_text(data=rects, x=centered, label=rects[,2], y =16.5, angle =90) +
# 3.5 for wind plot
f1 <- ggplot(x, aes(x = time)) + geom_rect(data =x ,  aes(xmin =rects$x1[1], xmax = rects$x2[1] , ymin = -Inf, ymax = Inf), fill=rect_color) +
geom_rect(data =x ,  aes(xmin =rects$x1[2], xmax = rects$x2[2] , ymin = -Inf, ymax = Inf), fill=rect_color) +
geom_rect(data =x ,  aes(xmin =rects$x1[3], xmax = rects$x2[3] , ymin = -Inf, ymax = Inf), fill=rect_color) +
geom_rect(data =x ,  aes(xmin =rects$x1[4], xmax = rects$x2[4] , ymin = -Inf, ymax = Inf), fill=rect_color) +
geom_rect(data =x ,  aes(xmin =rects$x1[5], xmax = rects$x2[5] , ymin = -Inf, ymax = Inf), fill=rect_color) +
geom_rect(data =x ,  aes(xmin =rects$x1[6], xmax = rects$x2[6] , ymin = -Inf, ymax = Inf), fill=rect_color) +
geom_text(data=rects, x=centered, label=rects[,2], y =34, angle =0) +
theme_bw()
#### f3 temp & chl-a ####
f3<-f1 +
geom_line(aes(y=chlorophyll * scale.chla), color=fcolor) +
geom_line(aes(y=celsius), color=tcolor) +
xlab("Date") +
ggtitle("SST and Chlorophyll-a") +
scale_x_datetime(date_breaks=('2 days'))+
scale_y_continuous(name ="SST (°C)", sec.axis = sec_axis(~./scale.chla,name="Chlorophyll-a [μg/L]"))+
#scale_y_continuous(name ="Chlorophyll-a [μg/L]", sec.axis = sec_axis(~./scale.chla,name="°C")) +
theme(
panel.background = element_rect(fill = NA),
panel.ontop = FALSE
) +
scale_x_datetime(date_labels = "%m/%d", date_breaks="2 days", date_minor_breaks = "1 days") +
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.ticks.y.left = element_line(color = tcolor),
axis.text.y.left = element_text(color = tcolor),
axis.title.y.left = element_text(color = tcolor)
) +
theme(axis.ticks.y.right = element_line(color = fcolor),
axis.text.y.right = element_text(color = fcolor),
axis.title.y.right = element_text(color = fcolor)
)+
theme(
panel.background = element_rect(fill = NA),
panel.ontop = FALSE
)
# add panel text
setwd(fig)
# pdf("figure_s1.pdf", width =10)
pdf("figure_s1_test.pdf", width =10)
print(f3)
dev.off()
#################################################################
rm(list=ls())
### install packages ###
f.ipak <- function(pkg){
# loads packages, quietly, given by a vector of package names e.g., pkg<-c("ggplot", "tidyverse")
# will install  packages listed , and their dependencies, if needed.
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE, quiet=T, verbose = F)
sapply(pkg, require, character.only = TRUE, quietly = FALSE, warn.conflicts=F)
}
# packages<-c("oce", "marmap", "sf", "raster", "lubridate", "ggplot2")  # set packages here
packages<-c("oce", 'sp', "sf", "rgeos", "lubridate", "tidyverse", "data.table")
f.ipak(packages)
## vesta directoires:
wd<-"/home/brandon/vestawd/omz/wd/r_wd"
robj<-"/home/brandon/vestawd/omz/wd/r_wd/r_objects"
fig<-"/home/brandon/vestawd/omz/figures"
gis_data<-"/home/brandon/vestawd/omz/data/gis_data"
data_d<-"/home/brandon/vestawd/omz/data/2018_data/"
ctdata<-"/home/brandon/vestawd/omz/data/2018_data/ctd/data"
#### load r object
setwd(robj)
x<-readRDS("2018_ctd_comparison_up_v_downcasts.R")
x[[1]]->d2
x[[2]]->d35
x[[3]]->d4
x[[4]]->u2
x[[5]]->u35
x[[6]]->u4
str(d2)
# duplicate of ctd code from"ctd_2018_2_vesta.R"
#ctd comparison
# dissertation messing about CTD data 2018 v2
# machine: vesta
# as far a
# new code for bud rewrite papper 2022-10-01
# plotting depends on package oce
# see https://dankelley.github.io/oce/
# and: https://bscheng.com/2017/10/08/oceanographic-data/
#################################################################
#                         TO DO                                 #
# 1: explore use of "useSmoothScatter"
# 2: write functions to simplify
# 3: see function options:
# https://dankelley.github.io/oce/reference/plot-ctd-method.html
# 4: plot sections
# 5: om section maps rmeove line ad numbers
# 5: fix casts with incorrect staion ids
#################################################################
rm(list=ls())
### install packages ###
f.ipak <- function(pkg){
# loads packages, quietly, given by a vector of package names e.g., pkg<-c("ggplot", "tidyverse")
# will install  packages listed , and their dependencies, if needed.
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE, quiet=T, verbose = F)
sapply(pkg, require, character.only = TRUE, quietly = FALSE, warn.conflicts=F)
}
# packages<-c("oce", "marmap", "sf", "raster", "lubridate", "ggplot2")  # set packages here
packages<-c("oce", 'sp', "sf", "rgeos", "lubridate", "tidyverse", "data.table")
f.ipak(packages)
## vesta directoires:
wd<-"/home/brandon/vestawd/omz/wd/r_wd"
robj<-"/home/brandon/vestawd/omz/wd/r_wd/r_objects"
fig<-"/home/brandon/vestawd/omz/figures"
gis_data<-"/home/brandon/vestawd/omz/data/gis_data"
data_d<-"/home/brandon/vestawd/omz/data/2018_data/"
ctdata<-"/home/brandon/vestawd/omz/data/2018_data/ctd/data"
#### load r object
setwd(robj)
x<-readRDS("2018_ctd_comparison_up_v_downcasts.R")
x[[1]]->d2
x[[2]]->d35
x[[3]]->d4
x[[4]]->u2
x[[5]]->u35
x[[6]]->u4
#### combined
files<-list.files(ctdata)
## station 2 - casts ##
c9<-read.ctd(file.path(ctdata, files[89]),)
c10<-read.ctd(file.path(ctdata, files[3]),)
c11<-read.ctd(file.path(ctdata, files[5]),)
c12<-read.ctd(file.path(ctdata, files[7]),)
c13<-read.ctd(file.path(ctdata, files[9]),)
c14<-read.ctd(file.path(ctdata, files[11]),)
c15<-read.ctd(file.path(ctdata, files[13]),)
c16<-read.ctd(file.path(ctdata, files[15]),)
c17<-read.ctd(file.path(ctdata, files[17]),)
#section
st2<-as.section(list(c9,c10,c11,c12,c13,c14,c15,c16,c17))
#c30 is mis labelledas station 3
## station 3.5 - casts ##
c30<-read.ctd(file.path(ctdata, files[47]),)
c31<-read.ctd(file.path(ctdata, files[49]),)
c32<-read.ctd(file.path(ctdata, files[51]),)
c33<-read.ctd(file.path(ctdata, files[53]),)
c34<-read.ctd(file.path(ctdata, files[55]),)
#section
st35<-as.section(list(c30,c31,c32,c33,c34))
## station 4 - casts ##
c35<-read.ctd(file.path(ctdata, files[57]),)
c36<-read.ctd(file.path(ctdata, files[59]),)
c37<-read.ctd(file.path(ctdata, files[61]),)
c38<-read.ctd(file.path(ctdata, files[63]),)
c39<-read.ctd(file.path(ctdata, files[65]),)
c40<-read.ctd(file.path(ctdata, files[69]),)
#section
st4<-as.section(list(c35,c36,c37,c38,c39,c40))
#### plotting ###
# plot(c13, which="oxygen2")
# p
# plot(st35, which="oxygen2", depth)
# plot(u35, which="oxygen2")
#
#
# #data combination:
# up_35 <- unlist(lapply(u35, function(x) x[['oxygen2']]))
# y<-ctdDecimate(u35)
u35_1<-cbind(u35@data$station[[1]]@data$oxygen2,u35@data$station[[1]]@data$depth)
u35_1<-as.data.frame(u35_1)
names(u35_1)<-c("o2", "depth")
u35_2<-cbind(u35@data$station[[2]]@data$oxygen2,u35@data$station[[2]]@data$depth)
u35_2<-as.data.frame(u35_2)
names(u35_2)<-c("o2", "depth")
u35_3<-cbind(u35@data$station[[3]]@data$oxygen2,u35@data$station[[3]]@data$depth)
u35_3<-as.data.frame(u35_3)
names(u35_3)<-c("o2", "depth")
u35_4<-cbind(u35@data$station[[4]]@data$oxygen2,u35@data$station[[4]]@data$depth)
u35_4<-as.data.frame(u35_4)
names(u35_4)<-c("o2", "depth")
u35_5<-cbind(u35@data$station[[5]]@data$oxygen2,u35@data$station[[5]]@data$depth)
u35_5<-as.data.frame(u35_5)
names(u35_5)<-c("o2", "depth")
d35_1<-cbind(d35@data$station[[1]]@data$oxygen2,d35@data$station[[1]]@data$depth)
d35_1<-as.data.frame(d35_1)
names(d35_1)<-c("o2", "depth")
d35_2<-cbind(d35@data$station[[2]]@data$oxygen2,d35@data$station[[2]]@data$depth)
d35_2<-as.data.frame(d35_2)
names(d35_2)<-c("o2", "depth")
d35_3<-cbind(d35@data$station[[3]]@data$oxygen2,d35@data$station[[3]]@data$depth)
d35_3<-as.data.frame(d35_3)
names(d35_3)<-c("o2", "depth")
d35_4<-cbind(d35@data$station[[4]]@data$oxygen2,d35@data$station[[4]]@data$depth)
d35_4<-as.data.frame(d35_4)
names(d35_4)<-c("o2", "depth")
d35_5<-cbind(d35@data$station[[5]]@data$oxygen2,d35@data$station[[5]]@data$depth)
d35_5<-as.data.frame(d35_5)
names(d35_5)<-c("o2", "depth")
par(mfrow=c(2,3))
plot(u35_1, xlim=c(0, 250), ylim=c(60,0), col="red");par(new=TRUE)
plot(d35_1,xlim=c(0, 250), ylim=c(60, 0), col ="blue", main="station 3.5")
plot(u35_2, xlim=c(0, 250), ylim=c(60,0), col="red");par(new=TRUE)
plot(d35_2,xlim=c(0, 250), ylim=c(60, 0), col ="blue", main="red = upcast")
plot(u35_3,xlim=c(0, 250), ylim=c(60,0), col="red");par(new=TRUE)
plot(d35_3,xlim=c(0, 250), ylim=c(60, 0), col ="blue", main="blue = downcast")
plot(u35_4,xlim=c(0, 250), ylim=c(60,0), col="red");par(new=TRUE)
plot(d35_4,xlim=c(0, 250), ylim=c(60, 0), col ="blue")
plot(u35_5,xlim=c(0, 250), ylim=c(60,0), col="red");par(new=TRUE)
plot(d35_5,xlim=c(0, 250), ylim=c(60, 0), col ="blue")
par(mfrow=c(2,3))
plot(u35_1, xlim=c(0, 250), ylim=c(60,0), col="red");par(new=TRUE)
plot(d35_1,xlim=c(0, 250), ylim=c(60, 0), col ="blue", main="station 3.5 individual casts")
plot(u35_2, xlim=c(0, 250), ylim=c(60,0), col="red");par(new=TRUE)
plot(d35_2,xlim=c(0, 250), ylim=c(60, 0), col ="blue", main="red = upcast")
plot(u35_3,xlim=c(0, 250), ylim=c(60,0), col="red");par(new=TRUE)
plot(d35_3,xlim=c(0, 250), ylim=c(60, 0), col ="blue", main="blue = downcast")
plot(u35_4,xlim=c(0, 250), ylim=c(60,0), col="red");par(new=TRUE)
plot(d35_4,xlim=c(0, 250), ylim=c(60, 0), col ="blue")
plot(u35_5,xlim=c(0, 250), ylim=c(60,0), col="red");par(new=TRUE)
plot(d35_5,xlim=c(0, 250), ylim=c(60, 0), col ="blue")
files<-list.files(ctdata)
files
dev.off()
rm(list=ls())
