st_date<-as.character(date(min(h.pts$DateTime)))
ed_date<-as.character(date(max(h.pts$DateTime)))
profiles<-select_profiles(lon_lim=c(box[1],box[2]), lat_lim=c(box[3], box[4]),
start_date=st_date, end_date=ed_date,
outside="none", sensor=c("DOXY"))
show_profiles(profiles$profiles, variables = c("DOXY"))
profiles
dev.off()
show_trajectories("6903093")
show_profiles(profiles$profiles)
show_profiles(profiles$profiles, variables = c("TEMP"))
show_profiles(profiles$profiles, variables = c("TEMP"))
show_sections(float_ids = , variables = c("DOXY"))
show_sections(float , variables = c("DOXY"))
show_sections(float , variables = c("TEMP"))
float<-"6903093"
download_multi_floats(float)
box<-extent(h.pts)
st_date<-as.character(date(min(h.pts$DateTime)))
ed_date<-as.character(date(max(h.pts$DateTime)))
# profiles<-select_profiles(lon_lim=c(box[1],box[2]), lat_lim=c(box[3], box[4]),
#                             start_date=st_date, end_date=ed_date,
#                             outside="none", sensor=c("DOXY"))
#
#
#
#
#
# show_profiles(profiles$profiles, variables = c("TEMP"))
# show_profiles(bud_keep$bud_window$prior$profile_index, variables = c("TEMP"))
#
#
# show_profiles(bud_keep$bud_window$post$profile_index, variables = c("DOXY"))
# show_profiles(bud_keep$bud_window$post$profile_index, variables = c("TEMP"))
#
# show_trajectories("6903093")
# show_sections("6903093", variables = c("TEMP"))
# show_sections("6903093", variables = c("DOXY"))
show_sections("6903093", variables = c("DOXY"))
setwd(wd)
path_code = "r_scripts/submodules/BGC-ARGO_R_WORKSHOP/"
source(paste0(path_code, "initialize_argo.R"))
source(paste0(path_code, "try_download.R"))
source(paste0(path_code, "do_download.R"))
source(paste0(path_code, "download_float.R"))
source(paste0(path_code, "download_multi_floats.R"))
source(paste0(path_code, "check_dir.R"))
source(paste0(path_code, "get_var_name_units.R"))
source(paste0(path_code, "select_profiles.R"))
source(paste0(path_code, "load_float_data.R"))
source(paste0(path_code, "plot_trajectories.R"))
source(paste0(path_code, "get_lon_lat_lims.R"))
source(paste0(path_code, "show_trajectories.R"))
source(paste0(path_code, "do_pause.R"))
source(paste0(path_code, "depth_interp.R"))
source(paste0(path_code, "calc_auxil.R"))
source(paste0(path_code, "get_multi_profile_mean.R"))
source(paste0(path_code, "show_profiles.R"))
source(paste0(path_code, "plot_profiles.R"))
source(paste0(path_code, "show_sections.R"))
source(paste0(path_code, "plot_sections.R"))
packages<-c("gsw", "R.utils","Matrix")
f.ipak(packages)
float<-"6903093"
download_multi_floats(float)
box<-extent(h.pts)
st_date<-as.character(date(min(h.pts$DateTime)))
ed_date<-as.character(date(max(h.pts$DateTime)))
# profiles<-select_profiles(lon_lim=c(box[1],box[2]), lat_lim=c(box[3], box[4]),
#                             start_date=st_date, end_date=ed_date,
#                             outside="none", sensor=c("DOXY"))
#
#
#
#
#
# show_profiles(profiles$profiles, variables = c("TEMP"))
# show_profiles(bud_keep$bud_window$prior$profile_index, variables = c("TEMP"))
#
#
# show_profiles(bud_keep$bud_window$post$profile_index, variables = c("DOXY"))
# show_profiles(bud_keep$bud_window$post$profile_index, variables = c("TEMP"))
#
# show_trajectories("6903093")
# show_sections("6903093", variables = c("TEMP"))
# show_sections("6903093", variables = c("DOXY"))
show_sections("6903093", variables = c("TEMP"))
show_sections("6903093", variables = c("TEMP"))
setwd(wd)
float<-"6903093"
download_multi_floats(float)
box<-extent(h.pts)
st_date<-as.character(date(min(h.pts$DateTime)))
ed_date<-as.character(date(max(h.pts$DateTime)))
# profiles<-select_profiles(lon_lim=c(box[1],box[2]), lat_lim=c(box[3], box[4]),
#                             start_date=st_date, end_date=ed_date,
#                             outside="none", sensor=c("DOXY"))
#
#
#
#
#
# show_profiles(profiles$profiles, variables = c("TEMP"))
# show_profiles(bud_keep$bud_window$prior$profile_index, variables = c("TEMP"))
#
#
# show_profiles(bud_keep$bud_window$post$profile_index, variables = c("DOXY"))
# show_profiles(bud_keep$bud_window$post$profile_index, variables = c("TEMP"))
#
# show_trajectories("6903093")
# show_sections("6903093", variables = c("TEMP"))
# show_sections("6903093", variables = c("DOXY"))
show_sections("6903093", variables = c("TEMP"))
rm(list=ls())
getwd()
rm(list=ls())
rm(list=ls())
getwd()
rm(list=ls())
wd<-"/home/brandon/vestawd/omz/wd/r_wd/r_scripts"
setwd(wd)
f.ipak <- function(pkg){
# loads packages, quietly, given by a vector of package names e.g., pkg<-c("ggplot", "tidyverse")
# will install  packages listed , and their dependencies, if needed.
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE, quiet=T, verbose = F)
sapply(pkg, require, character.only = TRUE, quietly = FALSE, warn.conflicts=F)
}
packages<-c("sp", "rgdal",  "rgeos", "raster", "readr", "tidyverse", "lubridate",  "ggthemes",  "sf", "cmocean", "ncdf4", "RNetCDF",  "plot3D", "tidync", "devtools", "stars", "ncmeta", "maps", "oce",
"data.table","raster", "fasterize", "RStoolbox", "scales", "purrr", "marmap", "gsw", "R.utils","Matrix")
f.ipak(packages)
setwd(wd)
path_code = "r_scripts/submodules/BGC-ARGO_R_WORKSHOP/"
source(paste0(path_code, "initialize_argo.R"))
source(paste0(path_code, "try_download.R"))
source(paste0(path_code, "do_download.R"))
source(paste0(path_code, "download_float.R"))
source(paste0(path_code, "download_multi_floats.R"))
source(paste0(path_code, "check_dir.R"))
source(paste0(path_code, "get_var_name_units.R"))
source(paste0(path_code, "select_profiles.R"))
source(paste0(path_code, "load_float_data.R"))
source(paste0(path_code, "plot_trajectories.R"))
source(paste0(path_code, "get_lon_lat_lims.R"))
source(paste0(path_code, "show_trajectories.R"))
source(paste0(path_code, "do_pause.R"))
source(paste0(path_code, "depth_interp.R"))
source(paste0(path_code, "calc_auxil.R"))
source(paste0(path_code, "get_multi_profile_mean.R"))
source(paste0(path_code, "show_profiles.R"))
source(paste0(path_code, "plot_profiles.R"))
source(paste0(path_code, "show_sections.R"))
source(paste0(path_code, "plot_sections.R"))
rm(f.ipak, packages, path_code)
rm(list=ls())
wd<-"/home/brandon/vestawd/omz/wd/r_wd/r_scripts"
setwd(wd)
f.ipak <- function(pkg){
# loads packages, quietly, given by a vector of package names e.g., pkg<-c("ggplot", "tidyverse")
# will install  packages listed , and their dependencies, if needed.
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE, quiet=T, verbose = F)
sapply(pkg, require, character.only = TRUE, quietly = FALSE, warn.conflicts=F)
}
packages<-c("sp", "rgdal",  "rgeos", "raster", "readr", "tidyverse", "lubridate",  "ggthemes",  "sf", "cmocean", "ncdf4", "RNetCDF",  "plot3D", "tidync", "devtools", "stars", "ncmeta", "maps", "oce",
"data.table","raster", "fasterize", "RStoolbox", "scales", "purrr", "marmap", "gsw", "R.utils","Matrix")
f.ipak(packages)
setwd(wd)
path_code = "r_scripts/submodules/BGC-ARGO_R_WORKSHOP/"
source(paste0(path_code, "initialize_argo.R"))
source(paste0(path_code, "try_download.R"))
source(paste0(path_code, "do_download.R"))
source(paste0(path_code, "download_float.R"))
source(paste0(path_code, "download_multi_floats.R"))
source(paste0(path_code, "check_dir.R"))
source(paste0(path_code, "get_var_name_units.R"))
source(paste0(path_code, "select_profiles.R"))
source(paste0(path_code, "load_float_data.R"))
source(paste0(path_code, "plot_trajectories.R"))
source(paste0(path_code, "get_lon_lat_lims.R"))
source(paste0(path_code, "show_trajectories.R"))
source(paste0(path_code, "do_pause.R"))
source(paste0(path_code, "depth_interp.R"))
source(paste0(path_code, "calc_auxil.R"))
source(paste0(path_code, "get_multi_profile_mean.R"))
source(paste0(path_code, "show_profiles.R"))
source(paste0(path_code, "plot_profiles.R"))
source(paste0(path_code, "show_sections.R"))
source(paste0(path_code, "plot_sections.R"))
rm(f.ipak, packages, path_code)
rm(list=ls())
wd<-"/home/brandon/vestawd/omz/wd/r_wd/r_scripts"
setwd(wd)
f.ipak <- function(pkg){
# loads packages, quietly, given by a vector of package names e.g., pkg<-c("ggplot", "tidyverse")
# will install  packages listed , and their dependencies, if needed.
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE, quiet=T, verbose = F)
sapply(pkg, require, character.only = TRUE, quietly = FALSE, warn.conflicts=F)
}
packages<-c("sp", "rgdal",  "rgeos", "raster", "readr", "tidyverse", "lubridate",  "ggthemes",  "sf", "cmocean", "ncdf4", "RNetCDF",  "plot3D", "tidync", "devtools", "stars", "ncmeta", "maps", "oce",
"data.table","raster", "fasterize", "RStoolbox", "scales", "purrr", "marmap", "gsw", "R.utils","Matrix")
f.ipak(packages)
setwd(wd)
path_code = "submodules/BGC-ARGO_R_WORKSHOP/"
source(paste0(path_code, "initialize_argo.R"))
source(paste0(path_code, "try_download.R"))
source(paste0(path_code, "do_download.R"))
source(paste0(path_code, "download_float.R"))
source(paste0(path_code, "download_multi_floats.R"))
source(paste0(path_code, "check_dir.R"))
source(paste0(path_code, "get_var_name_units.R"))
source(paste0(path_code, "select_profiles.R"))
source(paste0(path_code, "load_float_data.R"))
source(paste0(path_code, "plot_trajectories.R"))
source(paste0(path_code, "get_lon_lat_lims.R"))
source(paste0(path_code, "show_trajectories.R"))
source(paste0(path_code, "do_pause.R"))
source(paste0(path_code, "depth_interp.R"))
source(paste0(path_code, "calc_auxil.R"))
source(paste0(path_code, "get_multi_profile_mean.R"))
source(paste0(path_code, "show_profiles.R"))
source(paste0(path_code, "plot_profiles.R"))
source(paste0(path_code, "show_sections.R"))
source(paste0(path_code, "plot_sections.R"))
rm(f.ipak, packages, path_code)
# here
float<-"6903093"
load_float_data <-(float_ids=float)
plot_trajectories()
rm(list=ls())
wd<-"/home/brandon/vestawd/omz/wd/r_wd/r_scripts"
setwd(wd)
f.ipak <- function(pkg){
# loads packages, quietly, given by a vector of package names e.g., pkg<-c("ggplot", "tidyverse")
# will install  packages listed , and their dependencies, if needed.
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE, quiet=T, verbose = F)
sapply(pkg, require, character.only = TRUE, quietly = FALSE, warn.conflicts=F)
}
packages<-c("sp", "rgdal",  "rgeos", "raster", "readr", "tidyverse", "lubridate",  "ggthemes",  "sf", "cmocean", "ncdf4", "RNetCDF",  "plot3D", "tidync", "devtools", "stars", "ncmeta", "maps", "oce",
"data.table","raster", "fasterize", "RStoolbox", "scales", "purrr", "marmap", "gsw", "R.utils","Matrix")
f.ipak(packages)
setwd(wd)
path_code = "submodules/BGC-ARGO_R_WORKSHOP/"
source(paste0(path_code, "initialize_argo.R"))
source(paste0(path_code, "try_download.R"))
source(paste0(path_code, "do_download.R"))
source(paste0(path_code, "download_float.R"))
source(paste0(path_code, "download_multi_floats.R"))
source(paste0(path_code, "check_dir.R"))
source(paste0(path_code, "get_var_name_units.R"))
source(paste0(path_code, "select_profiles.R"))
source(paste0(path_code, "load_float_data.R"))
source(paste0(path_code, "plot_trajectories.R"))
source(paste0(path_code, "get_lon_lat_lims.R"))
source(paste0(path_code, "show_trajectories.R"))
source(paste0(path_code, "do_pause.R"))
source(paste0(path_code, "depth_interp.R"))
source(paste0(path_code, "calc_auxil.R"))
source(paste0(path_code, "get_multi_profile_mean.R"))
source(paste0(path_code, "show_profiles.R"))
source(paste0(path_code, "plot_profiles.R"))
source(paste0(path_code, "show_sections.R"))
source(paste0(path_code, "plot_sections.R"))
rm(f.ipak, packages, path_code)
# here
initialize_argo()
float<-"6903093"
load_float_data <-(float_ids=float)
plot_trajectories()
float<-"6903093"
load_float_data <-(float_ids=float)
Float
plot_trajectories.R(float)
plot_trajectories(float)
# Close figures, clean up workspace, clear command window
cat("\014")
rm(list = ls())
initialize_argo() # Take some minutes to download the global Index
rm(list=ls())
wd<-"/home/brandon/vestawd/omz/wd/r_wd/r_scripts"
setwd(wd)
f.ipak <- function(pkg){
# loads packages, quietly, given by a vector of package names e.g., pkg<-c("ggplot", "tidyverse")
# will install  packages listed , and their dependencies, if needed.
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE, quiet=T, verbose = F)
sapply(pkg, require, character.only = TRUE, quietly = FALSE, warn.conflicts=F)
}
packages<-c("sp", "rgdal",  "rgeos", "raster", "readr", "tidyverse", "lubridate",  "ggthemes",  "sf", "cmocean", "ncdf4", "RNetCDF",  "plot3D", "tidync", "devtools", "stars", "ncmeta", "maps", "oce",
"data.table","raster", "fasterize", "RStoolbox", "scales", "purrr", "marmap", "gsw", "R.utils","Matrix")
f.ipak(packages)
setwd(wd)
path_code = "submodules/BGC-ARGO_R_WORKSHOP/"
source(paste0(path_code, "initialize_argo.R"))
source(paste0(path_code, "try_download.R"))
source(paste0(path_code, "do_download.R"))
source(paste0(path_code, "download_float.R"))
source(paste0(path_code, "download_multi_floats.R"))
source(paste0(path_code, "check_dir.R"))
source(paste0(path_code, "get_var_name_units.R"))
source(paste0(path_code, "select_profiles.R"))
source(paste0(path_code, "load_float_data.R"))
source(paste0(path_code, "plot_trajectories.R"))
source(paste0(path_code, "get_lon_lat_lims.R"))
source(paste0(path_code, "show_trajectories.R"))
source(paste0(path_code, "do_pause.R"))
source(paste0(path_code, "depth_interp.R"))
source(paste0(path_code, "calc_auxil.R"))
source(paste0(path_code, "get_multi_profile_mean.R"))
source(paste0(path_code, "show_profiles.R"))
source(paste0(path_code, "plot_profiles.R"))
source(paste0(path_code, "show_sections.R"))
source(paste0(path_code, "plot_sections.R"))
initialize_argo() # Take some minutes to download the global Index
# initialize_argo()
float<-"6903093"
float_idx <-which(Float$wmoid==float)
float_idx
prof_ids = c(Float$prof_idx1[float_idx]:Float$prof_idx2[float_idx]) # profile IDs for float #5906439 in the S_file index
prof_ids
dates = Sprof$date[prof_ids] # dates of each profile from float #5906439
dates
sensors = unique(Sprof$sens[prof_ids]) # sensors available for float #5906439
sensors
rm (list= c("float_idx","prof_ids","sensors","dates")) # clean up workspace
# Download NetCDF file for float #5904183, a SOCCOM float with multiple seasons under ice
WMO = 5904859
WMO
WMO<-as.numeric(float)
WMO
#  Display attributes, dimensions, and variables available in the NetCDF
float_file = nc_open(paste0("Profiles/", WMO,"_Sprof.nc"))
getwd()
setwd(..)
setwd("..")
getwd()
list.files()
#  Display attributes, dimensions, and variables available in the NetCDF
float_file = nc_open(paste0("Profiles/", WMO,"_Sprof.nc"))
float_file
# Extract informational data from the NetCDF
names (float_file$var)
data = load_float_data( float_ids= WMO, # specify WMO number
variables=c('PSAL','TEMP','NITRATE', 'DOXY'))
data = load_float_data( float_ids= WMO, # specify WMO number
variables=c('PSAL','TEMP', 'DOXY'))
names(data$Data[[paste0('F', WMO)]]) # show data that has been loaded into R
show_trajectories(float_ids=WMO)
show_profiles( profile_ids=WMO,
variables=c('PSAL','TEMP', 'DOXY'),
type="floats", # given IDs refer to the floats
obs='on', # 'on' shows points on the profile at which each measurement was made
raw="yes" # show the unadjusted data
)
show_profiles( profile_ids=WMO,
variables=c('TEMP', 'DOXY'),
type="floats", # given IDs refer to the floats
obs='on', # 'on' shows points on the profile at which each measurement was made
raw="yes" # show the unadjusted data
)
rm(list=ls())
wd<-"/home/brandon/vestawd/omz/wd/r_wd/r_scripts"
setwd(wd)
f.ipak <- function(pkg){
# loads packages, quietly, given by a vector of package names e.g., pkg<-c("ggplot", "tidyverse")
# will install  packages listed , and their dependencies, if needed.
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE, quiet=T, verbose = F)
sapply(pkg, require, character.only = TRUE, quietly = FALSE, warn.conflicts=F)
}
packages<-c("sp", "rgdal",  "rgeos", "raster", "readr", "tidyverse", "lubridate",  "ggthemes",  "sf", "cmocean", "ncdf4", "RNetCDF",  "plot3D", "tidync", "devtools", "stars", "ncmeta", "maps", "oce",
"data.table","raster", "fasterize", "RStoolbox", "scales", "purrr", "marmap", "gsw", "R.utils","Matrix")
f.ipak(packages)
setwd(wd)
path_code = "submodules/BGC-ARGO_R_WORKSHOP/"
source(paste0(path_code, "initialize_argo.R"))
source(paste0(path_code, "try_download.R"))
source(paste0(path_code, "do_download.R"))
source(paste0(path_code, "download_float.R"))
source(paste0(path_code, "download_multi_floats.R"))
source(paste0(path_code, "check_dir.R"))
source(paste0(path_code, "get_var_name_units.R"))
source(paste0(path_code, "select_profiles.R"))
source(paste0(path_code, "load_float_data.R"))
source(paste0(path_code, "plot_trajectories.R"))
source(paste0(path_code, "get_lon_lat_lims.R"))
source(paste0(path_code, "show_trajectories.R"))
source(paste0(path_code, "do_pause.R"))
source(paste0(path_code, "depth_interp.R"))
source(paste0(path_code, "calc_auxil.R"))
source(paste0(path_code, "get_multi_profile_mean.R"))
source(paste0(path_code, "show_profiles.R"))
source(paste0(path_code, "plot_profiles.R"))
source(paste0(path_code, "show_sections.R"))
source(paste0(path_code, "plot_sections.R"))
rm(f.ipak, packages, path_code)
# here
# initialize_argo()
float<-"6903093"
float_idx <-which(Float$wmoid==float)
load_float_data <-(float_ids=float)
WMO<-as.numeric(float)
float_file = nc_open(paste0("Profiles/", WMO,"_Sprof.nc"))
data = load_float_data( float_ids= WMO, # specify WMO number
variables=c('PSAL','TEMP', 'DOXY'))
rm(list=ls())
wd<-"/home/brandon/vestawd/omz/wd/r_wd/r_scripts"
setwd(wd)
f.ipak <- function(pkg){
# loads packages, quietly, given by a vector of package names e.g., pkg<-c("ggplot", "tidyverse")
# will install  packages listed , and their dependencies, if needed.
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE, quiet=T, verbose = F)
sapply(pkg, require, character.only = TRUE, quietly = FALSE, warn.conflicts=F)
}
packages<-c("sp", "rgdal",  "rgeos", "raster", "readr", "tidyverse", "lubridate",  "ggthemes",  "sf", "cmocean", "ncdf4", "RNetCDF",  "plot3D", "tidync", "devtools", "stars", "ncmeta", "maps", "oce",
"data.table","raster", "fasterize", "RStoolbox", "scales", "purrr", "marmap", "gsw", "R.utils","Matrix")
f.ipak(packages)
setwd(wd)
path_code = "submodules/BGC-ARGO_R_WORKSHOP/"
source(paste0(path_code, "initialize_argo.R"))
source(paste0(path_code, "try_download.R"))
source(paste0(path_code, "do_download.R"))
source(paste0(path_code, "download_float.R"))
source(paste0(path_code, "download_multi_floats.R"))
source(paste0(path_code, "check_dir.R"))
source(paste0(path_code, "get_var_name_units.R"))
source(paste0(path_code, "select_profiles.R"))
source(paste0(path_code, "load_float_data.R"))
source(paste0(path_code, "plot_trajectories.R"))
source(paste0(path_code, "get_lon_lat_lims.R"))
source(paste0(path_code, "show_trajectories.R"))
source(paste0(path_code, "do_pause.R"))
source(paste0(path_code, "depth_interp.R"))
source(paste0(path_code, "calc_auxil.R"))
source(paste0(path_code, "get_multi_profile_mean.R"))
source(paste0(path_code, "show_profiles.R"))
source(paste0(path_code, "plot_profiles.R"))
source(paste0(path_code, "show_sections.R"))
source(paste0(path_code, "plot_sections.R"))
rm(f.ipak, packages, path_code)
initialize_argo()
float<-"6903093"
float_idx <-which(Float$wmoid==float)
load_float_data <-(float_ids=float)
WMO<-as.numeric(float)
# plot_trajectories()
setwd("..")
float_file = nc_open(paste0("Profiles/", WMO,"_Sprof.nc"))
data = load_float_data( float_ids= WMO, # specify WMO number
variables=c('PSAL','TEMP', 'DOXY'))
dates = Sprof$date[prof_ids] # dates of each profile from float #5906439
rm(list=ls())
wd<-"/home/brandon/vestawd/omz/wd/r_wd/r_scripts"
setwd(wd)
f.ipak <- function(pkg){
# loads packages, quietly, given by a vector of package names e.g., pkg<-c("ggplot", "tidyverse")
# will install  packages listed , and their dependencies, if needed.
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE, quiet=T, verbose = F)
sapply(pkg, require, character.only = TRUE, quietly = FALSE, warn.conflicts=F)
}
packages<-c("sp", "rgdal",  "rgeos", "raster", "readr", "tidyverse", "lubridate",  "ggthemes",  "sf", "cmocean", "ncdf4", "RNetCDF",  "plot3D", "tidync", "devtools", "stars", "ncmeta", "maps", "oce",
"data.table","raster", "fasterize", "RStoolbox", "scales", "purrr", "marmap", "gsw", "R.utils","Matrix")
f.ipak(packages)
setwd(wd)
path_code = "submodules/BGC-ARGO_R_WORKSHOP/"
source(paste0(path_code, "initialize_argo.R"))
source(paste0(path_code, "try_download.R"))
source(paste0(path_code, "do_download.R"))
source(paste0(path_code, "download_float.R"))
source(paste0(path_code, "download_multi_floats.R"))
source(paste0(path_code, "check_dir.R"))
source(paste0(path_code, "get_var_name_units.R"))
source(paste0(path_code, "select_profiles.R"))
source(paste0(path_code, "load_float_data.R"))
source(paste0(path_code, "plot_trajectories.R"))
source(paste0(path_code, "get_lon_lat_lims.R"))
source(paste0(path_code, "show_trajectories.R"))
source(paste0(path_code, "do_pause.R"))
source(paste0(path_code, "depth_interp.R"))
source(paste0(path_code, "calc_auxil.R"))
source(paste0(path_code, "get_multi_profile_mean.R"))
source(paste0(path_code, "show_profiles.R"))
source(paste0(path_code, "plot_profiles.R"))
source(paste0(path_code, "show_sections.R"))
source(paste0(path_code, "plot_sections.R"))
rm(f.ipak, packages, path_code)
initialize_argo()
float<-"6903093"
float_idx <-which(Float$wmoid==float)
float_idx
prof_ids = c(Float$prof_idx1[float_idx]:Float$prof_idx2[float_idx])
dates = Sprof$date[prof_ids]
dates
sensors = unique(Sprof$sens[prof_ids])
nmaes(sprof_update)
names(sprof_update)
str(sprof_update)
str(Sprof
)
names(Sprof)
